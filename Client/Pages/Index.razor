@page "/"
@using PalabrasApp.Shared
@inject HttpClient Http
@inject NavigationManager Nav


<h1>Palabras</h1>

@if (allPalabras == null)
{
    <h3>It's on its way...</h3>
}
else
{
    <h2>@palabra.SpanishWord = @palabra.EnglishWord</h2>
}

<div>
    <a href="/.auth/login/google">Login</a>
</div>

@if (isLoggedIn == false)
{
    <h2>Not logged in</h2>
}
else
{
    <div id="addWord">
        <input type="text" @bind="@spanishWord" />

        <br />

        <input type="text" @bind="@englishWord" />


        <button @onclick="@AddPalabra">Add word</button>
    </div>
}


@code {

    private IEnumerable<Palabra> allPalabras;
    private Palabra palabra;

    private string spanishWord;
    private string englishWord;

    private HttpResponseMessage getAuthStatus;
    private bool isLoggedIn = false;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            allPalabras = await Http.GetFromJsonAsync<IEnumerable<Palabra>>("/api/GetPalabras");
            RandomPalabra(allPalabras);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

        try
        {
            getAuthStatus = await Http.GetAsync("/.auth/me");

            if (getAuthStatus == null)
            {
                isLoggedIn = false;
            } else
            {
                isLoggedIn = true;
            }

        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

    }

    protected async Task AddPalabra()
    {

        try
        {
            var pal = new Palabra
            {
                SpanishWord = spanishWord.ToLower(),
                EnglishWord = englishWord.ToLower()
            };

            await Http.PostAsJsonAsync<Palabra>("/api/AddPalabra", pal);
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.ToString());
        }

    }

    protected Palabra RandomPalabra(IEnumerable<Palabra> palabras)
    {
        var palabrasList = palabras.ToList();
        var palabrasLength = palabrasList.Count();
        Random random = new Random();
        var randomPalabraIndex = random.Next(0, palabrasLength);
        palabra = palabrasList[randomPalabraIndex];
        return palabra;
    }

}

